{"version":3,"file":"static/js/852.0435ae30.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","TalentContext/reducer.ts","TalentContext/TalentContext.tsx","TalentContext/encoding.ts","TalentContext/selectors.ts","config.ts","TreeContext.ts","hooks/useTooltipPos.ts","components/Tooltip.tsx","components/TalentTooltip.tsx","components/Arrow.tsx","components/Talent.tsx","components/ClearButton.tsx","components/TalentTree.tsx","views/KlassTrees.tsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { State, Action } from \"./types\";\r\n\r\nexport const makeReducer = (initialState: State) => (\r\n  state: State,\r\n  action: Action,\r\n): State => {\r\n  switch (action.type) {\r\n    case \"POINT_SPENT\": {\r\n      const { tree, talent } = action;\r\n\r\n      return {\r\n        ...state,\r\n        [tree]: {\r\n          ...state[tree],\r\n          [talent]: state[tree][talent] + 1,\r\n        },\r\n      };\r\n    }\r\n\r\n    case \"POINT_UNSPENT\": {\r\n      const { tree, talent } = action;\r\n\r\n      return {\r\n        ...state,\r\n        [tree]: {\r\n          ...state[tree],\r\n          [talent]: state[tree][talent] - 1,\r\n        },\r\n      };\r\n    }\r\n\r\n    case \"TREE_RESET\": {\r\n      const { tree } = action;\r\n\r\n      return {\r\n        ...state,\r\n        [tree]: {\r\n          ...initialState[tree],\r\n        },\r\n      };\r\n    }\r\n\r\n    case \"ALL_RESET\": {\r\n      return {\r\n        ...initialState,\r\n      };\r\n    }\r\n\r\n    case \"STATE_RESTORED\": {\r\n      const { newState } = action;\r\n\r\n      return {\r\n        ...newState,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer, useContext } from \"react\";\r\n\r\nimport { State, TalentData } from \"./types\";\r\nimport {\r\n  isTalentUnlocked,\r\n  isTalentMaxed,\r\n  getPointsLeft,\r\n  getTalentRank,\r\n  getTalentDependents,\r\n} from \"./selectors\";\r\nimport { makeReducer } from \"./reducer\";\r\n\r\nconst createInitialState = (data: TalentData) =>\r\n  Object.entries(data).reduce<State>((prev, [treeName, tree]) => {\r\n    prev[treeName] = Object.keys(tree.talents).reduce<Record<string, number>>(\r\n      (prev, talentName) => {\r\n        prev[talentName] = 0;\r\n        return prev;\r\n      },\r\n      {},\r\n    );\r\n    return prev;\r\n  }, {});\r\n\r\nconst TalentContext = createContext<{\r\n  state: State;\r\n  data: TalentData;\r\n  spendPoint: (tree: string, talent: string) => void;\r\n  unspendPoint: (tree: string, talent: string) => void;\r\n  resetTree: (tree: string) => void;\r\n  resetAll: () => void;\r\n  restoreState: (newState: State) => void;\r\n} | null>(null);\r\n\r\nexport const createTalentProvider = (data: TalentData): React.FC => {\r\n  const initialState = createInitialState(data);\r\n\r\n  return ({ children }) => {\r\n    const [state, dispatch] = useReducer(\r\n      makeReducer(initialState),\r\n      initialState,\r\n    );\r\n\r\n    const spendPoint = (tree: string, talent: string) => {\r\n      const pointsLeft = getPointsLeft(state);\r\n      const unlocked = isTalentUnlocked(state, data, tree, talent);\r\n      const maxed = isTalentMaxed(state, data, tree, talent);\r\n\r\n      if (unlocked && !maxed && pointsLeft > 0) {\r\n        dispatch({ type: \"POINT_SPENT\", tree, talent });\r\n      }\r\n    };\r\n\r\n    const unspendPoint = (tree: string, talent: string) => {\r\n      const rank = getTalentRank(state, tree, talent);\r\n      const dependents = getTalentDependents(state, data, tree, talent);\r\n\r\n      if (dependents.length === 0 && rank > 0) {\r\n        dispatch({\r\n          type: \"POINT_UNSPENT\",\r\n          tree,\r\n          talent,\r\n        });\r\n      }\r\n    };\r\n\r\n    const resetTree = (tree: string) => {\r\n      dispatch({ type: \"TREE_RESET\", tree });\r\n    };\r\n\r\n    const resetAll = () => {\r\n      dispatch({ type: \"ALL_RESET\" });\r\n    };\r\n\r\n    const restoreState = (newState: State) => {\r\n      dispatch({ type: \"STATE_RESTORED\", newState });\r\n    };\r\n\r\n    const value = {\r\n      state,\r\n      data,\r\n      spendPoint,\r\n      unspendPoint,\r\n      resetTree,\r\n      resetAll,\r\n      restoreState,\r\n    };\r\n\r\n    return (\r\n      <TalentContext.Provider value={value}>{children}</TalentContext.Provider>\r\n    );\r\n  };\r\n};\r\n\r\nexport const useTalentContext = () => {\r\n  const context = useContext(TalentContext);\r\n\r\n  if (context === null) {\r\n    throw new Error(\r\n      \"Components using useTalentContext must be children of TalentContextProvider\",\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import { State, TalentData } from \"./types\";\r\nimport { encodeState, decodeState, trimEnd } from \"../utils\";\r\n\r\nconst SPLIT_SYMBOL = \"-\";\r\n\r\nconst getTreeStateFromHash = (talentNames: string[], hash: string = \"\") => {\r\n  const ranks = decodeState(hash);\r\n  return talentNames.reduce<Record<string, number>>((prev, name, i) => {\r\n    prev[name] = ranks[i] || 0;\r\n    return prev;\r\n  }, {});\r\n};\r\n\r\nexport const getStateFromHash = (data: TalentData, hash: string = \"\") => {\r\n  const hashes = hash.split(SPLIT_SYMBOL);\r\n  return Object.entries(data).reduce<State>((prev, [treeName, treeData], i) => {\r\n    prev[treeName] = getTreeStateFromHash(\r\n      Object.keys(treeData.talents),\r\n      hashes[i],\r\n    );\r\n    return prev;\r\n  }, {});\r\n};\r\n\r\nexport const getHashFromState = (state: State) => {\r\n  const hashes = Object.values(state).reduce<string[]>((prev, ranks) => {\r\n    const treeHash = encodeState(Object.values(ranks));\r\n    prev.push(treeHash || \"0\");\r\n    return prev;\r\n  }, []);\r\n  return trimEnd(\"0\", hashes).join(SPLIT_SYMBOL);\r\n};\r\n","import { State, TalentData } from \"./types\";\r\nimport { config } from \"../config\";\r\n\r\nexport const getTalentRank = (state: State, tree: string, talent: string) => {\r\n  return state[tree][talent];\r\n};\r\n\r\nexport const getTalentData = (\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  return data[tree].talents[talent];\r\n};\r\n\r\nconst getTreeTalents = (data: TalentData, tree: string) => {\r\n  return data[tree].talents;\r\n};\r\n\r\nexport const getTreeData = (data: TalentData, tree: string) => {\r\n  return data[tree];\r\n};\r\n\r\nexport const getTreePointsSpent = (state: State, tree: string) => {\r\n  const ranks = Object.values(state[tree]);\r\n  return ranks.reduce((prev, rank) => {\r\n    return prev + rank;\r\n  }, 0);\r\n};\r\n\r\nexport const getPointsSpent = (state: State) => {\r\n  const treeNames = Object.keys(state);\r\n  return treeNames.reduce((prev, treeName) => {\r\n    return prev + getTreePointsSpent(state, treeName);\r\n  }, 0);\r\n};\r\n\r\nexport const getPointsLeft = (state: State) => {\r\n  return config.TOTAL_POINTS - getPointsSpent(state);\r\n};\r\n\r\nexport const isTalentMaxed = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const talentRank = getTalentRank(state, tree, talent);\r\n  const talentData = getTalentData(data, tree, talent);\r\n  return talentRank === talentData.maxRank;\r\n};\r\n\r\nexport const areReqPointsMet = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const treePointsSpent = getTreePointsSpent(state, tree);\r\n  const talentData = getTalentData(data, tree, talent);\r\n  return treePointsSpent >= talentData.reqPoints;\r\n};\r\n\r\nexport const isPrereqMet = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const talentData = getTalentData(data, tree, talent);\r\n  if (talentData.prereq) {\r\n    return isTalentMaxed(state, data, tree, talentData.prereq);\r\n  }\r\n  // TODO: returns true if there is no prereq, could cause problems\r\n  return true;\r\n};\r\n\r\n// todo: doesn't consider if there are any remaining points\r\nexport const isTalentUnlocked = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const prereqMet = isPrereqMet(state, data, tree, talent);\r\n  const reqPointsMet = areReqPointsMet(state, data, tree, talent);\r\n  return prereqMet && reqPointsMet;\r\n};\r\n\r\nconst getBasePoints = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const { reqPoints } = getTalentData(data, tree, talent);\r\n  // get talents which require less than or equal to these points,\r\n  // sum their ranks\r\n  return Object.entries(getTreeTalents(data, tree)).reduce(\r\n    (prev, [talentName, talentData]) => {\r\n      if (talentData.reqPoints <= reqPoints) {\r\n        return prev + getTalentRank(state, tree, talentName);\r\n      }\r\n      return prev;\r\n    },\r\n    0,\r\n  );\r\n};\r\n\r\nexport const getTalentDependents = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const basePoints = getBasePoints(state, data, tree, talent);\r\n  const treeTalents = getTreeTalents(data, tree);\r\n\r\n  return Object.entries(treeTalents).reduce<string[]>(\r\n    (prev, [talentName, talentData]) => {\r\n      const rank = getTalentRank(state, tree, talentName);\r\n      const { prereq } = talentData;\r\n\r\n      if (talentData.reqPoints === basePoints && rank > 0) {\r\n        // if the talent has req equal to base points spent, therefore 1 less point and it would be illegal\r\n        prev.push(talentName);\r\n      } else if (prereq === talent && rank > 0) {\r\n        prev.push(talentName);\r\n      }\r\n      return prev;\r\n    },\r\n    [],\r\n  );\r\n};\r\n","export const config = {\r\n  TOTAL_POINTS: 51,\r\n  FIRST_POINT_LEVEL: 10,\r\n};\r\n","import { createContext, useContext } from \"react\";\r\n\r\nexport const TreeContext = createContext<string | null>(null);\r\n\r\nexport const useTreeContext = () => {\r\n  const context = useContext(TreeContext);\r\n\r\n  if (context === null) {\r\n    throw new Error(\r\n      \"Components using useTreeContext must be children of TreeContext.Provider\"\r\n    );\r\n  }\r\n\r\n  return context;\r\n};\r\n","import { useState, useRef, useLayoutEffect } from \"react\";\r\n\r\n// TODO: should be hidden by default\r\nconst DEFAULT_POS = \"topRight\";\r\n\r\nexport type TooltipPos = \"topRight\" | \"topLeft\" | \"bottomRight\" | \"bottomLeft\";\r\n\r\nexport const useTooltipPos = <T extends HTMLElement, U extends HTMLElement>(\r\n  // Optional dependencies for the positioning effect.\r\n  // Useful if the content of the tooltip can change while it's visible\r\n  ...deps: any[]\r\n) => {\r\n  const anchorRef = useRef<T | null>(null);\r\n  const tooltipRef = useRef<U | null>(null);\r\n  const [tooltipPos, setTooltipPos] = useState<TooltipPos>(DEFAULT_POS);\r\n  const [tooltipVisible, setTooltipVisible] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!tooltipVisible || !tooltipRef.current || !anchorRef.current) {\r\n      return;\r\n    }\r\n    const getPosition = (): TooltipPos => {\r\n      if (!tooltipRef.current || !anchorRef.current) {\r\n        return DEFAULT_POS;\r\n      }\r\n      const viewportHeight = window.innerHeight;\r\n      const viewportWidth = window.innerWidth;\r\n      const anchorRect = anchorRef.current.getBoundingClientRect();\r\n      const tooltipRect = tooltipRef.current.getBoundingClientRect();\r\n\r\n      const fitsTop = anchorRect.top >= tooltipRect.height;\r\n      const fitsRight = viewportWidth - anchorRect.right >= tooltipRect.width;\r\n      const fitsBottom =\r\n        viewportHeight - anchorRect.bottom >= tooltipRect.height;\r\n      const fitsLeft = anchorRect.left >= tooltipRect.width;\r\n\r\n      if (fitsTop && fitsRight) {\r\n        return \"topRight\";\r\n      } else if (fitsTop && fitsLeft) {\r\n        return \"topLeft\";\r\n      } else if (fitsBottom && fitsRight) {\r\n        return \"bottomRight\";\r\n      } else if (fitsBottom && fitsLeft) {\r\n        return \"bottomLeft\";\r\n      } else {\r\n        return DEFAULT_POS;\r\n      }\r\n    };\r\n\r\n    setTooltipPos(getPosition());\r\n  }, [tooltipVisible, ...deps]);\r\n\r\n  const showTooltip = () => setTooltipVisible(true);\r\n  const hideTooltip = () => setTooltipVisible(false);\r\n\r\n  // TODO: consider memoizing this?\r\n  return {\r\n    anchorProps: {\r\n      ref: anchorRef,\r\n      onMouseEnter: showTooltip,\r\n      onMouseLeave: hideTooltip,\r\n    },\r\n    tooltipProps: { ref: tooltipRef, position: tooltipPos },\r\n    tooltipVisible,\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Tooltip.css\";\r\nimport { TooltipPos } from \"../hooks/useTooltipPos\";\r\nimport tooltipBackground from \"../assets/tooltip.png\";\r\n\r\ninterface Props extends React.ComponentPropsWithRef<\"div\"> {\r\n  position: TooltipPos;\r\n  contentClassName?: string;\r\n}\r\n\r\nexport const Tooltip = React.forwardRef<HTMLDivElement, Props>(\r\n  ({ position, contentClassName = \"\", children }, ref) => {\r\n    return (\r\n      <div className={`Tooltip-container Tooltip-container--${position}`}>\r\n        <div ref={ref} className=\"Tooltip\">\r\n          <div className=\"Tooltip-backgroundContainer\">\r\n            <div\r\n              className=\"Tooltip-background--topLeft\"\r\n              style={{ backgroundImage: `url(${tooltipBackground})` }}\r\n            />\r\n            <div\r\n              className=\"Tooltip-background--topRight\"\r\n              style={{ backgroundImage: `url(${tooltipBackground})` }}\r\n            />\r\n            <div\r\n              className=\"Tooltip-background--bottomLeft\"\r\n              style={{ backgroundImage: `url(${tooltipBackground})` }}\r\n            />\r\n            <div\r\n              className=\"Tooltip-background--bottomRight\"\r\n              style={{ backgroundImage: `url(${tooltipBackground})` }}\r\n            />\r\n          </div>\r\n          <div className={`Tooltip-content ${contentClassName}`}>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { Tooltip } from \"./Tooltip\";\r\n\r\nimport \"./TalentTooltip.css\";\r\nimport { useTalentContext } from \"../TalentContext\";\r\nimport {\r\n  getTalentRank,\r\n  areReqPointsMet,\r\n  isPrereqMet,\r\n  isTalentUnlocked,\r\n  getTalentData,\r\n  getPointsLeft,\r\n} from \"../TalentContext/selectors\";\r\n\r\ninterface Props extends React.ComponentPropsWithoutRef<typeof Tooltip> {\r\n  name: string;\r\n  tree: string;\r\n}\r\n\r\nexport const TalentTooltip = React.forwardRef<HTMLDivElement, Props>(\r\n  ({ name, tree, ...rest }, ref) => {\r\n    const { state, data } = useTalentContext();\r\n\r\n    // TODO: all these getters are potentially costly & redundant\r\n    const pointsLeft = getPointsLeft(state);\r\n    const talentData = getTalentData(data, tree, name);\r\n    const prereqData = talentData.prereq\r\n      ? getTalentData(data, tree, talentData.prereq)\r\n      : null;\r\n    const rank = getTalentRank(state, tree, name);\r\n    const reqPointsMet = areReqPointsMet(state, data, tree, name);\r\n    const prereqMet = isPrereqMet(state, data, tree, name);\r\n    const unlocked = isTalentUnlocked(state, data, tree, name);\r\n\r\n    return (\r\n      <Tooltip ref={ref} contentClassName=\"TalentTooltip-content\" {...rest}>\r\n        <h1 className=\"TalentTooltip-title\">{name}</h1>\r\n        <p className=\"TalentTooltip-rank\">\r\n          Rank {rank}/{talentData.maxRank}\r\n        </p>\r\n        {!reqPointsMet && (\r\n          <p className=\"TalentTooltip-error\">\r\n            Requires {talentData.reqPoints} points in {tree} Talents\r\n          </p>\r\n        )}\r\n        {prereqData && !prereqMet && (\r\n          <p className=\"TalentTooltip-error\">\r\n            Requires {prereqData.maxRank} point\r\n            {prereqData.maxRank > 1 ? \"s\" : \"\"} in {prereqData.name}\r\n          </p>\r\n        )}\r\n        <p className=\"TalentTooltip-description\">\r\n          {rank === 0\r\n            ? talentData.description(rank + 1)\r\n            : talentData.description(rank)}\r\n        </p>\r\n        {rank !== 0 && rank < talentData.maxRank && (\r\n          <>\r\n            <br />\r\n            <p>Next rank:</p>\r\n            <p className=\"TalentTooltip-description\">\r\n              {talentData.description(rank + 1)}\r\n            </p>\r\n          </>\r\n        )}\r\n        {rank > 0 && (\r\n          <p className=\"TalentTooltip-error\">Right-click to unlearn</p>\r\n        )}\r\n        {unlocked && rank === 0 && pointsLeft > 0 && (\r\n          <p className=\"TalentTooltip-clickToLearn\">Click to learn</p>\r\n        )}\r\n      </Tooltip>\r\n    );\r\n  },\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./Arrow.css\";\r\nimport arrowLeft from \"../assets/arrows/left.png\";\r\nimport arrowLeftGold from \"../assets/arrows/left--gold.png\";\r\nimport arrowRight from \"../assets/arrows/right.png\";\r\nimport arrowRightGold from \"../assets/arrows/right--gold.png\";\r\nimport arrowDown from \"../assets/arrows/down.png\";\r\nimport arrowDownGold from \"../assets/arrows/down--gold.png\";\r\nimport arrowRightDown from \"../assets/arrows/right-down.png\";\r\nimport arrowRightDownGold from \"../assets/arrows/right-down--gold.png\";\r\nimport arrowLeftDown from \"../assets/arrows/left-down.png\";\r\nimport arrowLeftDownGold from \"../assets/arrows/left-down--gold.png\";\r\n\r\nimport { Position, ArrowDir } from \"../TalentContext\";\r\n\r\nconst imageMap = {\r\n  left: arrowLeft,\r\n  \"left--gold\": arrowLeftGold,\r\n  right: arrowRight,\r\n  \"right--gold\": arrowRightGold,\r\n  down: arrowDown,\r\n  \"down--gold\": arrowDownGold,\r\n  \"right-down\": arrowRightDown,\r\n  \"right-down--gold\": arrowRightDownGold,\r\n  \"right-down-down\": arrowDown,\r\n  \"right-down-down--gold\": arrowDownGold,\r\n  \"left-down\": arrowLeftDown,\r\n  \"left-down--gold\": arrowLeftDownGold,\r\n  \"left-down-down\": arrowDown,\r\n  \"left-down-down--gold\": arrowDownGold,\r\n};\r\n\r\ninterface Props {\r\n  dir: ArrowDir;\r\n  from: Position;\r\n  to: Position;\r\n  active: boolean;\r\n}\r\n\r\nexport const Arrow: React.FC<Props> = ({ dir, from, to, active }) => {\r\n  const arrowType = `${dir}${active ? \"--gold\" : \"\"}` as keyof typeof imageMap;\r\n\r\n  return (\r\n    <div\r\n      className={`Arrow-container Arrow-container--${dir}`}\r\n      style={{ gridArea: `${from} / ${from} / ${to} / ${to}` }}\r\n    >\r\n      <div\r\n        className={`Arrow Arrow--${dir}`}\r\n        style={{\r\n          backgroundImage: `url(${imageMap[arrowType]})`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Talent.css\";\r\nimport talentBubble from \"../assets/talent-bubble.png\";\r\nimport { useTooltipPos } from \"../hooks/useTooltipPos\";\r\nimport { useTreeContext } from \"../TreeContext\";\r\nimport { useTalentContext } from \"../TalentContext\";\r\nimport { TalentTooltip } from \"./TalentTooltip\";\r\nimport { SquareButton } from \"./SquareButton\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport {\r\n  getTalentRank,\r\n  isTalentMaxed,\r\n  isTalentUnlocked,\r\n  getPointsLeft,\r\n  getTalentData,\r\n} from \"../TalentContext/selectors\";\r\n\r\ninterface Props {\r\n  name: string;\r\n}\r\n\r\nexport const Talent: React.FC<Props> = ({ name }) => {\r\n  const tree = useTreeContext();\r\n  const { state, data, spendPoint, unspendPoint } = useTalentContext();\r\n\r\n  const { pos, icon, arrows } = getTalentData(data, tree, name);\r\n  const pointsLeft = getPointsLeft(state);\r\n  const rank = getTalentRank(state, tree, name);\r\n  const maxed = isTalentMaxed(state, data, tree, name);\r\n  const unlocked = isTalentUnlocked(state, data, tree, name);\r\n\r\n  const { anchorProps, tooltipProps, tooltipVisible } = useTooltipPos<\r\n    HTMLButtonElement,\r\n    HTMLDivElement\r\n  >(rank);\r\n\r\n  // TODO: too many edge cases here, hard to digest\r\n  // move to a selector?\r\n  const talentState = (() => {\r\n    if (pointsLeft < 1 && rank === 0) {\r\n      return \"locked\";\r\n    }\r\n    if (maxed) {\r\n      return \"maxed\";\r\n    }\r\n    if (unlocked) {\r\n      return \"unlocked\";\r\n    }\r\n    return \"locked\";\r\n  })();\r\n\r\n  const outlineColor = (() => {\r\n    if (talentState === \"unlocked\") {\r\n      return \"green\";\r\n    }\r\n    if (talentState === \"maxed\") {\r\n      return \"gold\";\r\n    }\r\n    return \"grey\";\r\n  })();\r\n\r\n  return (\r\n    <>\r\n      {arrows &&\r\n        arrows.map((arrow, i) => (\r\n          <Arrow key={i} active={unlocked} {...arrow} />\r\n        ))}\r\n      <div className=\"Talent-container\" style={{ gridArea: pos }}>\r\n        <SquareButton\r\n          onClick={() => spendPoint(tree, name)}\r\n          onRightClick={() => unspendPoint(tree, name)}\r\n          icon={icon}\r\n          disabled={talentState === \"locked\"}\r\n          outline={outlineColor}\r\n          {...anchorProps}\r\n        />\r\n        {talentState !== \"locked\" && (\r\n          <div\r\n            className={`Talent-pointCount Talent-pointCount--${outlineColor}`}\r\n            style={{ backgroundImage: `url(${talentBubble})` }}\r\n          >\r\n            {rank}\r\n          </div>\r\n        )}\r\n        {tooltipVisible && (\r\n          <TalentTooltip name={name} tree={tree} {...tooltipProps} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./ClearButton.css\";\r\nimport crossImage from \"../assets/cross.gif\";\r\n\r\ninterface Props {\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ClearButton: React.FC<Props> = ({ children, ...rest }) => {\r\n  return (\r\n    <button className=\"ClearButton\" {...rest}>\r\n      {children && <span className=\"ClearButton-label\">{children}</span>}\r\n      <div\r\n        className=\"ClearButton-icon\"\r\n        style={{ backgroundImage: `url(${crossImage})` }}\r\n      />\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./TalentTree.css\";\r\nimport { TreeContext } from \"../TreeContext\";\r\nimport { useTalentContext } from \"../TalentContext\";\r\nimport { Talent } from \"./Talent\";\r\nimport { SquareButton } from \"./SquareButton\";\r\nimport { ClearButton } from \"./ClearButton\";\r\nimport { getTreePointsSpent, getTreeData } from \"../TalentContext/selectors\";\r\n\r\ninterface Props {\r\n  name: string;\r\n}\r\n\r\nexport const TalentTree: React.FC<Props> = ({ name, children }) => {\r\n  const { state, data, resetTree } = useTalentContext();\r\n  const pointsSpent = getTreePointsSpent(state, name);\r\n  const treeData = getTreeData(data, name);\r\n\r\n  return (\r\n    <TreeContext.Provider value={name}>\r\n      <div className=\"TalentTree\">\r\n        <header className=\"TalentTree-header\">\r\n          <SquareButton className=\"TalentTree-icon\" icon={treeData.icon} />\r\n          <div style={{ flex: 1 }}>\r\n            <h2 className=\"TalentTree-name\" style={{ flex: 1 }}>\r\n              {name}\r\n            </h2>\r\n            <p className=\"TalentTree-pointsSpent\">\r\n              Points spent: {pointsSpent}\r\n            </p>\r\n          </div>\r\n          <ClearButton onClick={() => resetTree(name)} />\r\n        </header>\r\n        <div\r\n          className=\"TalentTree-grid\"\r\n          style={{ backgroundImage: `url(${treeData.background})` }}\r\n        >\r\n          {Object.keys(treeData.talents).map(talentName => (\r\n            <Talent key={talentName} name={talentName} />\r\n          ))}\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </TreeContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { withRouter, matchPath, RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport \"./KlassTrees.css\";\r\nimport { config } from \"../config\";\r\nimport {\r\n  useTalentContext,\r\n  getPointsLeft,\r\n  getTreePointsSpent,\r\n  getStateFromHash,\r\n  getHashFromState,\r\n} from \"../TalentContext\";\r\nimport { TalentTree } from \"../components/TalentTree\";\r\nimport { ClearButton } from \"../components/ClearButton\";\r\n\r\ninterface Props extends RouteComponentProps {\r\n  klass: string;\r\n}\r\n\r\nexport const KlassTrees = withRouter<Props, React.FC<Props>>(\r\n  ({ klass, location, history }) => {\r\n    const { state, data, resetAll, restoreState } = useTalentContext();\r\n\r\n    const pointsLeft = getPointsLeft(state);\r\n    const treeNames = Object.keys(data);\r\n    const treePointsSpent = treeNames\r\n      .map(treeName => getTreePointsSpent(state, treeName))\r\n      .join(\"/\");\r\n\r\n    const requiredLevel =\r\n      config.TOTAL_POINTS - pointsLeft + config.FIRST_POINT_LEVEL - 1;\r\n\r\n    // TODO: move this into a hook?\r\n    useEffect(() => {\r\n      const match = matchPath<{ skills: string }>(location.pathname, {\r\n        path: \"/:klass/:skills\",\r\n      });\r\n      const hash = match && match.params && match.params.skills;\r\n      if (hash) {\r\n        restoreState(getStateFromHash(data, hash));\r\n      }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      const match = matchPath<{ klass: string }>(location.pathname, {\r\n        path: \"/:klass\",\r\n      });\r\n      const klass = match && match.params && match.params.klass;\r\n      const skillHash = getHashFromState(state);\r\n      if (skillHash) {\r\n        history.replace(`/${klass}/${skillHash}`);\r\n      } else {\r\n        history.replace(`/${klass}`);\r\n      }\r\n    }, [state]);\r\n\r\n    return (\r\n      <div className=\"KlassTrees-container\">\r\n        <div className=\"KlassTrees\">\r\n          <div className=\"KlassTrees-header\">\r\n            <div className=\"KlassTrees-titleArea\">\r\n              <h1>\r\n                {klass} {treePointsSpent}\r\n              </h1>\r\n              <p className=\"KlassTrees-summary\">\r\n                Required level: {requiredLevel >= 10 ? requiredLevel : \"-\"}\r\n              </p>\r\n              <p className=\"KlassTrees-summary\">Points left: {pointsLeft}</p>\r\n            </div>\r\n            <ClearButton onClick={() => resetAll()}>Clear all</ClearButton>\r\n          </div>\r\n          <div className=\"KlassTrees-list\">\r\n            {treeNames.map(name => (\r\n              <TalentTree key={name} name={name} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","TalentContext","createContext","createTalentProvider","data","initialState","entries","reduce","prev","treeName","tree","talents","talentName","createInitialState","children","useReducer","state","action","type","talent","newState","makeReducer","dispatch","spendPoint","pointsLeft","getPointsLeft","unlocked","isTalentUnlocked","maxed","isTalentMaxed","unspendPoint","rank","getTalentRank","getTalentDependents","resetTree","resetAll","restoreState","Provider","useTalentContext","context","useContext","Error","getTreeStateFromHash","talentNames","hash","ranks","decodeState","name","getStateFromHash","hashes","split","treeData","getHashFromState","values","treeHash","encodeState","trimEnd","join","getTalentData","getTreeTalents","getTreeData","getTreePointsSpent","config","getPointsSpent","maxRank","areReqPointsMet","reqPoints","isPrereqMet","talentData","prereq","prereqMet","reqPointsMet","basePoints","getBasePoints","treeTalents","TOTAL_POINTS","FIRST_POINT_LEVEL","TreeContext","DEFAULT_POS","Tooltip","React","ref","position","contentClassName","className","style","backgroundImage","tooltipBackground","TalentTooltip","rest","prereqData","description","imageMap","left","arrowLeft","arrowLeftGold","right","arrowRight","arrowRightGold","down","arrowDown","arrowDownGold","Arrow","dir","from","to","active","arrowType","gridArea","Talent","useTreeContext","pos","icon","arrows","anchorRef","useRef","tooltipRef","useState","tooltipPos","setTooltipPos","tooltipVisible","setTooltipVisible","deps","useLayoutEffect","current","viewportHeight","window","innerHeight","viewportWidth","innerWidth","anchorRect","getBoundingClientRect","tooltipRect","fitsTop","top","height","fitsRight","width","fitsBottom","bottom","fitsLeft","getPosition","anchorProps","onMouseEnter","onMouseLeave","tooltipProps","useTooltipPos","talentState","outlineColor","map","arrow","SquareButton","onClick","onRightClick","disabled","outline","talentBubble","ClearButton","crossImage","TalentTree","pointsSpent","flex","background","KlassTrees","withRouter","klass","location","history","treeNames","treePointsSpent","requiredLevel","useEffect","match","matchPath","pathname","path","params","skills","skillHash","replace","_slicedToArray","arr","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","unsupportedIterableToArray","TypeError","_taggedTemplateLiteral","strings","raw","slice","freeze"],"sourceRoot":""}